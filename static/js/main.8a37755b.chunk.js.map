{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/Errorboundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","id","email","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","Searchbox","searchChange","searchfield","type","onChange","Scroll","props","style","overflowY","border","height","children","Errorboundry","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","_this$state","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"iNAceA,EAZF,SAAHC,GAA0B,IAArBC,EAAID,EAAJC,KAAMC,EAAEF,EAAFE,GAAIC,EAAKH,EAALG,MACrB,OACIC,IAAAC,cAAA,OAAKC,UAAU,oDACXF,IAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BP,EAAE,cACjDE,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,UAAKF,MCcNO,EAnBE,SAAHV,GAAiB,IAAZW,EAAMX,EAANW,OACf,OACIP,IAAAC,cAAA,WAEQM,EAAOC,IAAI,SAACC,EAAMC,GACd,OACIV,IAAAC,cAACN,EAAI,CACDgB,IAAKD,EACLZ,GAAIS,EAAOG,GAAGZ,GACdD,KAAMU,EAAOG,GAAGb,KAChBE,MAAOQ,EAAOG,GAAGX,YCH9Ba,EARG,SAAHhB,GAAoC,IAA/BiB,EAAYjB,EAAZiB,aAAyBjB,EAAXkB,YAC9B,OACId,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,SAAOC,UAAU,mCAAmCa,KAAK,SAASC,SAAUH,MCIzEI,EAPA,SAACC,GACZ,OACIlB,IAAAC,cAAA,OAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCgBJC,EAnBG,SAAAC,GACd,SAAAD,EAAYN,GAAM,IAAAQ,EAIb,OAJaC,YAAAC,KAAAJ,IACdE,EAAAG,YAAAD,KAAAE,YAAAN,GAAAO,KAAAH,KAAMV,KACDc,MAAQ,CACTC,UAAU,GACbP,EAWJ,OAhBaQ,YAAAV,EAAAC,GAMbU,YAAAX,EAAA,EAAAb,IAAA,oBAAAyB,MAAA,SAEiBC,EAAOC,GACrBV,KAAKW,SAAS,CAACN,UAAU,MAC5B,CAAAtB,IAAA,SAAAyB,MAAA,WAEG,OAAGR,KAAKI,MAAMC,SACHjC,IAAAC,cAAA,UAAI,uCAER2B,KAAKV,MAAMK,aACrBC,EAhBa,CAASgB,aC6CZC,SAzCN,SAAAhB,GACL,SAAAgB,IAAa,IAAAf,EAKR,OALQC,YAAAC,KAAAa,IACTf,EAAAG,YAAAD,KAAAE,YAAAW,GAAAV,KAAAH,QAaJc,eAAiB,SAACC,GACdjB,EAAKa,SAAS,CAACzB,YAAa6B,EAAMC,OAAOR,SAbzCV,EAAKM,MAAQ,CACTzB,OAAQ,GACRO,YAAa,IAChBY,EAgCJ,OAtCIQ,YAAAO,EAAAhB,GAOJU,YAAAM,EAAA,EAAA9B,IAAA,oBAAAyB,MAAA,WAEkB,IAAAS,EAAAjB,KACfkB,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtC,GAAI,OAAIoC,EAAKN,SAAS,CAAChC,OAAQE,QAC5C,CAAAE,IAAA,SAAAyB,MAAA,WAKO,IAAAc,EAE0BtB,KAAKI,MAA5BzB,EAAM2C,EAAN3C,OAAQO,EAAWoC,EAAXpC,YACTqC,EAAiB5C,EAAO6C,OAAO,SAAA7C,GACjC,OAAOA,EAAOV,KAAKwD,cAAcC,SAASxC,EAAYuC,iBAG1D,OAAS9C,EAAOgD,OAEZvD,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,gBAAe,cAAWF,IAAAC,cAAA,SAAG,WAC3CD,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAACW,EAAS,CAACC,aAAce,KAAKc,iBAC9B1C,IAAAC,cAACgB,EAAM,KACHjB,IAAAC,cAACuB,EAAY,KACTxB,IAAAC,cAACK,EAAQ,CAACC,OAAQ4C,OARRnD,IAAAC,cAAA,MAAIC,UAAU,MAAK,eAahDuC,EAtCI,CAASD,cCMHgB,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAb,KAAAY,EAAAE,KAAA,UAAqBd,KAAK,SAAAnD,GAAiD,IAA9CkE,EAAMlE,EAANkE,OAAQC,EAAMnE,EAANmE,OAAQC,EAAMpE,EAANoE,OAAQC,EAAMrE,EAANqE,OAAQC,EAAOtE,EAAPsE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,aCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvE,IAAAC,cAACwC,EAAG,OAONe","file":"static/js/main.8a37755b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({name, id, email}) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <h2>{email}</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox = ({searchChange, searchfield}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" onChange={searchChange} />\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass Errorboundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooooops, something error happened!</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default Errorboundry;","import React, {Component} from \"react\";\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport Errorboundry from '../components/Errorboundry';\r\nimport './App.css';\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '', \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(user => this.setState({robots: user}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n    render(){\r\n\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return (!robots.length) ? <h1 className=\"tc\">Loading</h1> :          \r\n        (\r\n            <div className=\"tc\">\r\n                <h2 className=\"thomas-style\">Welcome to <b>Thomas</b></h2>\r\n                <h1>Robofriends</h1>\r\n                <Searchbox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <Errorboundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Errorboundry>\r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './containers/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />,\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}